<Window x:Class="DuplicatesGui.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DuplicatesGui"
        xmlns:vm="clr-namespace:DuplicatesGui.ViewModel"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="800"
        Cursor="{Binding Cursor}"
        d:DataContext="{d:DesignInstance vm:DuplicatesViewModel, d:IsDesignTimeCreatable=True}">
    <Window.Resources>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <local:ProgressToVisibilityConverter x:Key="progressToVisibilityConverter"/>
        <local:InvertedProgressToVisibilityConverter x:Key="invertedProgressToVisibilityConverter"/>
        <local:ItemsCountToVisibilityConverter x:Key="itemsCountToVisibilityConverter"/>
        <local:InvertedItemsCountToVisibilityConverter x:Key="invertedItemsCountToVisibilityConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
        <local:UriToCachedImageConverter x:Key ="uriToImageConv"/>
        <local:FileExistenceToColorConverter x:Key="FileExistenceToColorConverter"/>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="50" />
            <Setter Property="Margin" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.6"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel VerticalAlignment="Top" Grid.ColumnSpan="3">
            <Menu Width="Auto" Height="20">
                <MenuItem Header="_File">
                    <MenuItem x:Name="AppExit" Header="E_xit" HorizontalAlignment="Left" Width="140" Click="AppExit_Click">
                        <MenuItem.Icon>
                            <Image Source="/Icons/exit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem x:Name="Export" Header="_Export" HorizontalAlignment="Left" Width="140" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/export.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="Import" Header="_Import" HorizontalAlignment="Left" Width="140" Command="{Binding ImportCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/import.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="ShowPreview" Header="_Show Preview" HorizontalAlignment="Left" Width="140" Command="{Binding ShowPreviewCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/preview.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="Showsettings" Header="_Settings" HorizontalAlignment="Left" Width="140" Command="{Binding ShowSettingsCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/settings.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem x:Name="About" Header="_About" HorizontalAlignment="Left" Width="140" Command="{Binding ShowAboutCommand}"/>
                </MenuItem>
            </Menu>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource ButtonStyle}" Command="{Binding BrowseCommand}" AllowDrop="True"
                    PreviewDragEnter="TextBox_PreviewDragOver"
                    PreviewDragOver="TextBox_PreviewDragOver"
                    PreviewDrop="TextBox_PreviewDrop"
                    ToolTip="Select search root">
                <Image Source="/Icons/addfolder.png"/>
            </Button>
            <Label Grid.Column="1" x:Name="pathTextBox" HorizontalAlignment="Left" Margin="10,20,10,10"
                   Content="{Binding StartPath}"/>
            <TextBlock Grid.Column="2" HorizontalAlignment="Right" Margin="10,20,10,0">
                <Run Text="Selected filter: "/>
                <Run Text="{Binding Filter}"/>
            </TextBlock>
        </Grid>
        <Button Grid.Row="2" ToolTip="Click to start scan"  Style="{StaticResource ButtonStyle}" Command="{Binding StartCommand}"  Visibility="{Binding IsIdle,Converter={StaticResource BooleanToVisibilityConverter}}">
            <Image Source="/Icons/play.png"/>
        </Button>
        <Button Grid.Row="2" ToolTip="Click to cancel scanning" Style="{StaticResource ButtonStyle}" Command="{Binding CancelCommand}" Visibility="{Binding IsIdle,Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
            <Image Source="/Icons/stop.png"/>
        </Button>
        <StackPanel Grid.Row="3"
                Grid.Column="1"
                Visibility="{Binding Duplicates.Count, Converter={StaticResource invertedItemsCountToVisibilityConverter}}" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image Source="/Icons/information.png" Height="32" Width="32"/>
            <Label Content="No Duplicate Files" FontStyle="Oblique" FontSize="20"/>
        </StackPanel>
        <ListView Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" Name="lvDuplicates"
                  SelectedItem="{Binding CurrentItem}" ItemsSource="{Binding Duplicates}"
                  PreviewMouseLeftButtonUp="listView_Click" MouseDoubleClick="listView_Double_Click"
                  MinHeight="300" MinWidth="400" Margin="10"
                  VerticalContentAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                  Visibility="{Binding Duplicates.Count, Converter={StaticResource itemsCountToVisibilityConverter}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <ei:ChangePropertyAction TargetObject="{Binding Mode=OneWay}" PropertyName="SelectedItems" Value="{Binding Path=SelectedItems, ElementName=lvDuplicates}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Filename" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="Txt" Text="{Binding Path=FilePath}" Foreground="{Binding FilePath, Converter={StaticResource FileExistenceToColorConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Image">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image MaxHeight="30" MaxWidth="30" Source="{Binding FilePath, Converter={StaticResource uriToImageConv}}"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" VerticalAlignment="Bottom" />
                                                    <TextBlock Text="{Binding ItemCount}" FontWeight="Bold" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                                    <TextBlock Text=" item(s)" VerticalAlignment="Bottom" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove"
                    Command="{Binding RemoveItemCommand}"
                    CommandParameter="{Binding CurrentItem}" />
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
        <StackPanel
        Grid.Row="4"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        Visibility="{Binding ProgressPercent ,Converter={StaticResource progressToVisibilityConverter}}">
            <ProgressBar Margin="0,10,0,10" Minimum="0" Maximum="100" Value="{Binding ProgressPercent}" Name="pbStatus" />
            <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </StackPanel>
    </Grid>
</Window>
